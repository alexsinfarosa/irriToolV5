{"version":3,"sources":["AppContext.js","withRoot.js","components/Navigation.js","components/Forecast.js","components/Field.js","utils/utils.js","utils/api.js","components/FieldList.js","Main.js","components/FieldLocation.js","components/FieldIrrigation.js","SetupField.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","theme","createMuiTheme","typography","useNextVariants","suppressDeprecationWarnings","palette","primary","main","purple","secondary","green","overrides","MuiPaper","root","padding","textAlign","backgroundColor","elevation2","boxShadow","withRoot","Component","props","react_default","a","createElement","styles","CssBaseline_default","React","memo","withStyles","display","justifyContent","alignItems","minHeight","icons","spacing","unit","withTheme","classes","className","leftIcon","centerIcon","rightIcon","components_Forecast","flexDirection","background","height","window","innerHeight","icon","color","grey","fontSize","iconOnFocus","_useContext","useContext","screenIdx","setScreenIdx","components_Navigation","Cloud_default","HomeOutlined_default","onClick","style","overflowY","Grid_default","container","item","xs","Paper_default","components_Field","CloudOutlined_default","Home_default","ListOutlined_default","modeldata","soilmoistureoptions","low","wiltingpoint","prewiltingpoint","stressthreshold","fieldcapacity","saturation","medium","high","soildrainageoptions","daysToDrainToFcFromSat","deficitNoStress","deficitStress","determineColor","deficit","getTawForPlant","soilcap","getWaterStressCoeff","Dr","TAW","Ks","Math","max","getPET","sdate","lat","lon","soilCapacity","initDeficit","console","log","year","Date","getFullYear","toString","latitude","toFixed","longitude","url","concat","axios","get","then","res","dates","Object","toConsumableArray","data","dates_precip","dates_precip_fcst","pcpns","precip","precip_fcst","pets","pet","pet_fcst","runWaterDeficitModel","deficitDaily","map","val","i","p","date","pcp","catch","err","deficitAdjustment","todayIdx","dailyPotentialDrainageRate","Kc","totalDailyDrainage","totalDailyRunoff","totalDailyPrecip","totalDailyPET","hourlyPrecip","hourlyPET","hourlyDrainage","hourlyPotentialDrainage","deficitDailyChange","drainageDaily","runoffDaily","precipDaily","petDaily","push","getPotentialDailyDrainage","idx","length","hr","min","deficitAdjustmentSum","reduce","acc","curr","components_FieldList","_useState","useState","_useState2","slicedToArray","isDialog","setIsDialog","_useState3","_useState4","fieldId","setFieldId","setSwipeble","fields","today","deleteField","selectField","icons_List_default","PlaylistAdd_default","field","todayObj","find","obj","format","key","id","borderLeft","List_default","component","ListItem_default","button","marginLeft","Button_default","variant","mini","ListItemText_default","address","split","irrigationDate","ListItemSecondaryAction_default","IconButton_default","aria-label","Delete_default","Dialog_default","open","onClose","aria-labelledby","aria-describedby","hideBackdrop","DialogTitle_default","DialogContent_default","DialogActions_default","autoFocus","Main","lib_default","containerStyle","WebkitOverflowScrolling","enableMouseEvents","index","onChangeIndex","Geocode","setApiKey","setAddress","setLatitude","_useState5","_useState6","setLongitude","_useState7","_useState8","errorMessage","setErrorMessage","location","setField","clearField","slideIdx","setSlideIdx","handleError","_ref2","asyncToGenerator","regenerator_default","mark","_callee","status","clearSuggestions","wrap","_context","prev","next","stop","this","_x","_x2","apply","arguments","handleCloseClick","ArrowBack_default","align","marginTop","Typography_default","gutterBottom","margin","dist_default","onChange","value","onSelect","geocodeByAddress","results","getLatLng","_ref","lng","error","hideVirtualKeyboard","onError","shouldFetchSuggestions","_ref3","getInputProps","suggestions","getSuggestionItemProps","width","TextField_default","label","fullWidth","SelectProps","native","InputProps","endAdornment","InputAdornment_default","position","Clear_default","disabled","helperText","list","suggestion","assign","paddingLeft","formattedSuggestion","mainText","secondaryText","Divider_default","size","fromLatLng","response","formatted_address","objectSpread","setIrrigationDate","addField","material_ui_pickers_esm","onlyCalendar","keyboard","disableFuture","mask","SetupField","Slide_default","direction","in","mountOnEnter","unmountOnExit","components_FieldLocation","components_FieldIrrigation","getLocation","geolocation","navigator","type","payload","Promise","resolve","reject","Error","getCurrentPosition","fieldInitialState","cropType","deficitAdjustments","forecast","Boolean","hostname","match","ReactDOM","render","utils","DateFnsUtils","setTodayIdx","swipeble","_useState9","_useState10","setLocation","_useState11","_useState12","setFields","_useState13","_useState14","sent","findIndex","fetchForecastData","now","useEffect","_callee2","_context2","coords","readFromLocalstorage","writeToLocalstorage","_res$data","currently","daily","localStorage","setItem","JSON","stringify","localStorageRef","getItem","params","parse","fieldCopy","deleteFromLocalstorage","removeItem","Provider","fieldsUpdated","filter","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bae431b9.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AppContext = createContext({});\n","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport green from \"@material-ui/core/colors/green\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n    suppressDeprecationWarnings: true\n  },\n  palette: {\n    primary: {\n      main: purple[500]\n    },\n    secondary: {\n      main: green[500]\n    }\n  },\n  overrides: {\n    MuiPaper: {\n      root: {\n        padding: 16,\n        textAlign: \"center\",\n        backgroundColor: \"#f5f5f5\"\n      },\n      elevation2: { boxShadow: \"none\" }\n    }\n  }\n});\n\nfunction withRoot(Component) {\n  function WithRoot(props) {\n    // MuiThemeProvider makes the theme available down the React tree\n    // thanks to React context.\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Component {...props} />\n      </MuiThemeProvider>\n    );\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","import React from \"react\";\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\nimport withRoot from \"../withRoot\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    minHeight: 80\n    // background: \"pink\"\n  },\n  icons: {\n    // background: \"#fff\",\n    padding: theme.spacing.unit * 2\n  }\n});\n\nfunction Navigation(props) {\n  // console.log(\"Navigation Components\");\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <div className={classes.icons}>{props.leftIcon}</div>\n      <div className={classes.icons}>{props.centerIcon}</div>\n      <div className={classes.icons}>{props.rightIcon}</div>\n    </div>\n  );\n}\n\nexport default React.memo(\n  withRoot(withStyles(styles)(withTheme()(Navigation)))\n);\n","import React, { useContext } from \"react\";\nimport { AppContext } from \"../AppContext\";\n\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\nimport withRoot from \"../withRoot\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HomeIcon from \"@material-ui/icons/HomeOutlined\";\nimport CloudIcon from \"@material-ui/icons/Cloud\";\n\nimport Navigation from \"./Navigation\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: \"#fff\",\n    height: window.innerHeight\n  },\n  icon: {\n    color: theme.palette.grey[500],\n    fontSize: 32\n  },\n  iconOnFocus: {\n    color: theme.palette.primary.main,\n    fontSize: 40\n  }\n});\n\nfunction Forecast(props) {\n  // console.log(\"Forecast Component\");\n  const { screenIdx, setScreenIdx } = useContext(AppContext);\n  const { classes, theme } = props;\n  return (\n    <div className={classes.root}>\n      <Navigation\n        leftIcon={null}\n        centerIcon={\n          <CloudIcon\n            className={screenIdx === 0 ? classes.iconOnFocus : classes.icon}\n          />\n        }\n        rightIcon={\n          <HomeIcon\n            className={classes.icon}\n            onClick={() => setScreenIdx(screenIdx + 1)}\n          />\n        }\n      />\n\n      <div\n        style={{\n          padding: theme.spacing.unit,\n          display: \"flex\",\n          overflowY: \"scroll\"\n        }}\n      >\n        <Grid container spacing={theme.spacing.unit * 2}>\n          <Grid item xs={6}>\n            <Paper>xs=6</Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper>xs=6</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>xs=12</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FORECAST</Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(withRoot(withStyles(styles)(withTheme()(Forecast))));\n","import React, { useContext } from \"react\";\n\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\nimport withRoot from \"../withRoot\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport ListIcon from \"@material-ui/icons/ListOutlined\";\nimport CloudIcon from \"@material-ui/icons/CloudOutlined\";\n\nimport Navigation from \"./Navigation\";\nimport { AppContext } from \"../AppContext\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: \"#fff\",\n    height: window.innerHeight\n  },\n  icon: {\n    color: theme.palette.grey[500],\n    fontSize: 32\n  },\n  iconOnFocus: {\n    color: theme.palette.primary.main,\n    fontSize: 40\n  }\n});\n\nfunction Field(props) {\n  // console.log(\"Field Component\");\n  const { screenIdx, setScreenIdx } = useContext(AppContext);\n  const { classes, theme } = props;\n\n  return (\n    <div className={classes.root}>\n      <Navigation\n        leftIcon={\n          <CloudIcon\n            className={classes.icon}\n            onClick={() => setScreenIdx(screenIdx - 1)}\n          />\n        }\n        centerIcon={\n          <HomeIcon\n            className={screenIdx === 1 ? classes.iconOnFocus : classes.icon}\n          />\n        }\n        rightIcon={\n          <ListIcon\n            className={classes.icon}\n            onClick={() => setScreenIdx(screenIdx + 1)}\n          />\n        }\n      />\n\n      <div\n        style={{\n          padding: theme.spacing.unit,\n          overflowY: \"scroll\"\n        }}\n      >\n        <Grid container spacing={theme.spacing.unit * 2}>\n          <Grid item xs={6}>\n            <Paper>xs=6</Paper>\n          </Grid>\n          <Grid item xs={6}>\n            <Paper>xs=6</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>xs=12</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n          <Grid item xs={12}>\n            <Paper>FIELD</Paper>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(withRoot(withStyles(styles)(withTheme()(Field))));\n","import axios from \"axios\";\n\nimport { PROXYIRRIGATION } from \"./api\";\n\n// soildata:\n// soil moisture and drainage characteristics for different levels of soil water capacity\nconst modeldata = {\n  cropinfo: {\n    grass: {\n      Lini: 0,\n      Ldev: 0,\n      Lmid: 240,\n      Llate: 0,\n      Kcini: 1.0,\n      Kcmid: 1.0,\n      Kcend: 1.0\n    }\n  },\n  soildata: {\n    soilmoistureoptions: {\n      low: {\n        wiltingpoint: 1.0,\n        prewiltingpoint: 1.15,\n        stressthreshold: 1.5,\n        fieldcapacity: 2.0,\n        saturation: 5.0\n      },\n      medium: {\n        wiltingpoint: 2.0,\n        prewiltingpoint: 2.225,\n        stressthreshold: 2.8,\n        fieldcapacity: 3.5,\n        saturation: 5.5\n      },\n      high: {\n        wiltingpoint: 3.0,\n        prewiltingpoint: 3.3,\n        stressthreshold: 4.0,\n        fieldcapacity: 5.0,\n        saturation: 6.5\n      }\n    },\n    soildrainageoptions: {\n      low: { daysToDrainToFcFromSat: 0.125 },\n      medium: { daysToDrainToFcFromSat: 1.0 },\n      high: { daysToDrainToFcFromSat: 2.0 }\n    }\n  }\n};\n\n// const noDeficit =\n//   modeldata.soildata.soilmoistureoptions.medium.saturation -\n//   modeldata.soildata.soilmoistureoptions.medium.fieldcapacity;\n\nconst deficitNoStress =\n  modeldata.soildata.soilmoistureoptions.medium.stressthreshold -\n  modeldata.soildata.soilmoistureoptions.medium.fieldcapacity;\n\nconst deficitStress =\n  modeldata.soildata.soilmoistureoptions.medium.prewiltingpoint -\n  modeldata.soildata.soilmoistureoptions.medium.fieldcapacity;\n\n// const severeStress =\n//   modeldata.soildata.soilmoistureoptions.medium.wiltingpoint -\n//   modeldata.soildata.soilmoistureoptions.medium.fieldcapacity;\n\n// console.log(noDeficit);\n// console.log(deficitNoStress);\n// console.log(deficitStress);\n// console.log(severeStress);\n\nexport const determineColor = deficit => {\n  if (deficit >= 0) {\n    return \"#2E933C\";\n  }\n  if (deficit >= deficitNoStress && deficit < 0) {\n    return \"#F9DC5C\";\n  }\n\n  if (deficit >= deficitStress && deficit < deficitNoStress) {\n    return \"#FC9E4F\";\n  }\n\n  if (deficit < deficitStress) {\n    return \"#BA2D0B\";\n  }\n};\n\nconst getPotentialDailyDrainage = soilcap => {\n  // -----------------------------------------------------------------------------------------\n  // Calculate potential daily drainage of soil\n  //\n  // soilcap : soil water capacity : string ('high', 'medium', 'low')\n  // -----------------------------------------------------------------------------------------\n  return (\n    (modeldata.soildata.soilmoistureoptions[soilcap].saturation -\n      modeldata.soildata.soilmoistureoptions[soilcap].fieldcapacity) /\n    modeldata.soildata.soildrainageoptions[soilcap].daysToDrainToFcFromSat\n  );\n};\n\nconst getTawForPlant = soilcap => {\n  // -----------------------------------------------------------------------------------------\n  // Calculate total available water (TAW) for plant, defined here as:\n  // soil moisture at field capacity minus soil moisture at wilting point\n  //\n  // soilcap : soil water capacity : string ('high', 'medium', 'low')\n  // -----------------------------------------------------------------------------------------\n  return (\n    modeldata.soildata.soilmoistureoptions[soilcap].fieldcapacity -\n    modeldata.soildata.soilmoistureoptions[soilcap].wiltingpoint\n  );\n};\n\nconst getWaterStressCoeff = (Dr, TAW) => {\n  // -----------------------------------------------------------------------------------------\n  // Calculate coefficient for adjusting ET when accounting for decreased ET during water stress conditions.\n  // Refer to FAO-56 eq 84, pg 169\n  // Dr  : the antecedent water deficit (in)\n  // TAW : total available (in) water for the plant (soil moisture at field capacity minus soil moisture at wilting point).\n  // p   : at what fraction between field capacity and wilting point do we start applying this water stress factor.\n  // Ks  : water stress coefficient\n  // -----------------------------------------------------------------------------------------\n  let Ks = null;\n  const p = 0.5;\n  Dr = -1 * Dr;\n  Ks = Dr <= p * TAW ? 1 : (TAW - Dr) / ((1 - p) * TAW);\n  Ks = Math.max(Ks, 0);\n  return Ks;\n};\n\nexport const getPET = (sdate, lat, lon, soilCapacity, initDeficit) => {\n  console.log(\"getPET CALLED!\");\n  const year = new Date(sdate).getFullYear().toString();\n  const latitude = lat.toFixed(4);\n  const longitude = lon.toFixed(4);\n  // the first date is 03/01\n  const url = `${PROXYIRRIGATION}?lat=${latitude}&lon=${longitude}&year=${year}`;\n  return axios\n    .get(url)\n    .then(res => {\n      // console.log(`BrianCALL`, res.data);\n      const dates = [...res.data.dates_precip, ...res.data.dates_precip_fcst];\n      const pcpns = [...res.data.precip, ...res.data.precip_fcst];\n      const pets = [...res.data.pet, ...res.data.pet_fcst];\n      const results = runWaterDeficitModel(\n        pcpns,\n        pets,\n        initDeficit,\n        soilCapacity,\n        0,\n        0\n      );\n\n      const data = results.deficitDaily.map((val, i) => {\n        let p = {};\n        p.date = `${dates[i]}/${year}`;\n        p.deficit = +val.toFixed(2);\n        p.pet = pets[i];\n        p.pcp = pcpns[i];\n        return p;\n      });\n\n      // console.log(data);\n      return data;\n    })\n    .catch(err => {\n      console.log(\"Failed to fetch PET data\", err);\n    });\n};\n\nexport const runWaterDeficitModel = (\n  precip,\n  pet,\n  initDeficit,\n  soilcap,\n  deficitAdjustment,\n  todayIdx\n) => {\n  // console.log(precip, pet, initDeficit, soilcap);\n  // -----------------------------------------------------------------------------------------\n  // Calculate daily water deficit (inches) from daily precipitation, evapotranspiration, soil drainage and runoff.\n  //\n  // The water deficit is calculated relative to field capacity (i.e. the amount of water available to the plant).\n  // Therefore, the water deficit is:\n  //    - zero when soil moisture is at field capacity\n  //    - a negative value when soil moisture is between field capacity and the wilting point\n  //    - a positive value when soil moisture is between field capacity and saturation\n  //    - bounded below by the wilting point ( = soil moisture at wilting point minus soil moisture at field capacity )\n  //    - bounded above by saturation ( = soil moisture at saturation minus soil moisture at field capacity)\n  //\n  //  precip       : daily precipitation array (in) : (NRCC ACIS grid 3)\n  //  pet          : daily potential evapotranspiration array (in) : (grass reference PET obtained from NRCC MORECS model output)\n  //  initDeficit  : water deficit used to initialize the model\n  //  startDate    : date of model initialization     ** removed for this implementation -kle\n  //  plantingDate : date crop was planted            ** removed for this implementation -kle\n  //  soilcap      : soil water capacity ('high','medium','low')\n  //  croptype     : type of crop\n  //\n  // -----------------------------------------------------------------------------------------\n\n  // a running tally of the deficit\n  var deficit = null;\n\n  // days since planting, for help in determining the plant's current growth stage\n  //var daysSincePlanting = null; ** removed for this implementation -kle\n  // Total water available to plant\n  var TAW = null;\n  // water stress coefficient\n  var Ks = null;\n  // crop coefficient\n  var Kc = null;\n\n  // values of model components for a single day\n  var totalDailyDrainage = null;\n  var totalDailyRunoff = null;\n  var totalDailyPrecip = null;\n  var totalDailyPET = null;\n  var dailyPotentialDrainageRate = null;\n\n  // hourly rates of model components\n  var hourlyPrecip = null;\n  var hourlyPET = null;\n  var hourlyDrainage = null;\n  var hourlyPotentialDrainage = null;\n\n  // OUTPUT VARS\n  // arrays holding daily values of model components\n  // deficitDaily is water deficit calculation we are looking for.\n  // Other variables are just for potential water balance verification, etc, if the user chooses.\n  var deficitDaily = [];\n  var deficitDailyChange = [];\n  var drainageDaily = [];\n  var runoffDaily = [];\n  var precipDaily = [];\n  var petDaily = [];\n\n  // Initialize deficit\n  //   : to zero if saturated soil after irrigation)\n  //   : to last observed deficit if running for forecasts\n  deficit = initDeficit;\n\n  // the first elements in our output arrays. It include the water deficit initialization. Others will populate starting Day 2.\n  deficitDaily.push(deficit);\n  deficitDailyChange.push(null);\n  drainageDaily.push(null);\n  runoffDaily.push(null);\n  petDaily.push(null);\n  precipDaily.push(null);\n\n  // Calculate daily drainage rate that occurs when soil water content is between saturation and field capacity\n  dailyPotentialDrainageRate = getPotentialDailyDrainage(soilcap);\n\n  // Need to know the number of days since planting for crop coefficient calculation\n  // If the number is negative, assuming Kc = Kcini for bare soil and single crop coeff method (FAO-56)\n  // daysSincePlanting =  Math.floor(( Date.parse(startDate) - Date.parse(plantingDate) ) / 86400000);    ** removed for this implementation -kle\n\n  // Loop through all days, starting with the second day (we already have the deficit for the initial day from model initialization)\n  for (var idx = 1; idx < pet.length; idx++) {\n    // increment as we advance through the growth stages of the plant\n    //daysSincePlanting += 1    ** removed for this implementation -kle\n\n    // Calculate Ks, the water stress coefficient, using antecedent deficit\n    TAW = getTawForPlant(soilcap);\n    Ks = getWaterStressCoeff(deficitDaily[idx - 1], TAW);\n    // Calculate Kc, the crop coefficient, using the days since planting\n    //Kc = getSingleCropCoeff(daysSincePlanting,croptype);  ** removed for this implementation -kle\n    Kc = 1; // ** added for this implementation -kle\n\n    // Vars to hold the daily tally for components of the water balance model daily - mostly for calc verification\n    // Initialize the daily totals here.\n    totalDailyDrainage = 0;\n    totalDailyRunoff = 0;\n    // We already know what the daily total is for Precip and ET\n    totalDailyPET = -1 * pet[idx] * Kc * Ks;\n    totalDailyPrecip = precip[idx];\n\n    // Convert daily rates to hourly rates. For this simple model, rates are constant throughout the day.\n    // For drainage : this assumption is okay\n    // For precip   : this assumption is about all we can do without hourly observations\n    // For PET      : this assumption isn't great. Something following diurnal cycle would be best.\n    // For runoff   : not necessary. hourly runoff is determined without limits below.\n    // ALL HOURLY RATES POSITIVE\n    hourlyPrecip = totalDailyPrecip / 24;\n    hourlyPET = (-1 * totalDailyPET) / 24;\n    hourlyPotentialDrainage = dailyPotentialDrainageRate / 24;\n\n    for (var hr = 1; hr <= 24; hr++) {\n      // Calculate hourly drainage estimate. It is bounded by the potential drainage rate and available\n      // water in excess of the field capacity. We assume drainage does not occur below field capacity.\n      if (deficit > 0) {\n        hourlyDrainage = Math.min(deficit, hourlyPotentialDrainage);\n      } else {\n        hourlyDrainage = 0;\n      }\n      totalDailyDrainage -= hourlyDrainage;\n\n      // calculate runoff for bookkeeping purposes\n      // runoff is essentially calculated as the amount of water 'deficit' in excess of saturation\n      // runoff is applied to the model by setting saturation bounds, below\n      totalDailyRunoff -= Math.max(\n        deficit +\n          hourlyPrecip -\n          hourlyPET -\n          hourlyDrainage -\n          (modeldata.soildata.soilmoistureoptions[soilcap].saturation -\n            modeldata.soildata.soilmoistureoptions[soilcap].fieldcapacity),\n        0\n      );\n\n      // Adjust deficit based on hourly water budget.\n      // deficit is bound by saturation (soil can't be super-saturated). This effectively reduces deficit by hourly runoff as well.\n      deficit = Math.min(\n        deficit + hourlyPrecip - hourlyPET - hourlyDrainage,\n        modeldata.soildata.soilmoistureoptions[soilcap].saturation -\n          modeldata.soildata.soilmoistureoptions[soilcap].fieldcapacity\n      );\n\n      // deficit is bound by wilting point, but calculations should never reach wilting point based on this model. We bound it below for completeness.\n      // In the real world, deficit is able to reach wilting point. The user should note that deficit values NEAR the wilting point\n      // from this model should be interpreted as 'danger of wilting exists'.\n      deficit = Math.max(\n        deficit,\n        -1 *\n          (modeldata.soildata.soilmoistureoptions[soilcap].fieldcapacity -\n            modeldata.soildata.soilmoistureoptions[soilcap].wiltingpoint)\n      );\n    }\n\n    // user action: manually adding water deficiency\n    let deficitAdjustmentSum = 0;\n    if (deficitAdjustment.length > 0) {\n      deficitAdjustmentSum = deficitAdjustment.reduce(\n        (acc, curr) => acc + curr\n      );\n    }\n    // console.log(\n    //   `BEF: ${idx ===\n    //     todayIdx}, ${idx}, ${todayIdx}, ${deficitAdjustment}, ${deficitAdjustmentSum}, ${deficit})}`\n    // );\n\n    deficit = idx === todayIdx ? deficit + deficitAdjustmentSum : deficit;\n    // console.log(\n    //   `AFT: ${idx ===\n    //     todayIdx}, ${idx}, ${todayIdx}, ${deficitAdjustment}, ${deficitAdjustmentSum},${deficit})}`\n    // );\n\n    deficitDailyChange.push(deficit - deficitDaily[deficitDaily.length - 1]);\n    deficitDaily.push(deficit);\n    drainageDaily.push(totalDailyDrainage);\n    runoffDaily.push(totalDailyRunoff);\n    petDaily.push(totalDailyPET);\n    precipDaily.push(totalDailyPrecip);\n  }\n\n  // console.log('INSIDE WATER DEFICIT MODEL');\n  // console.log(deficitDaily);\n\n  return {\n    deficitDailyChange: deficitDailyChange,\n    deficitDaily: deficitDaily,\n    drainageDaily: drainageDaily,\n    runoffDaily: runoffDaily,\n    petDaily: petDaily,\n    precipDaily: precipDaily\n  };\n};\n","export const WEATHER_API_KEY = \"f82aa924e56c2fef2726dad38f6d7baf\";\nexport const GOOGLEPLACES_API_KEY = \"AIzaSyAUk9begav92si1W6yVe39GlOO7Au2aB0A\";\nexport const PROXYDARKSKY = `https://0nakxnhta9.execute-api.us-east-1.amazonaws.com/production/darksky`;\nexport const PROXYIRRIGATION = `https://0nakxnhta9.execute-api.us-east-1.amazonaws.com/production/irrigation`;\n","import React, { useContext, useState } from \"react\";\n\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\nimport withRoot from \"../withRoot\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport HomeIcon from \"@material-ui/icons/HomeOutlined\";\nimport List from \"@material-ui/core/List\";\nimport ListIcon from \"@material-ui/icons/List\";\nimport AddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport format from \"date-fns/format\";\nimport { determineColor } from \"../utils/utils\";\n\nimport Navigation from \"./Navigation\";\nimport { AppContext } from \"../AppContext\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: \"#fff\",\n    height: window.innerHeight\n  },\n  icon: {\n    color: theme.palette.grey[500],\n    fontSize: 32\n  },\n  iconOnFocus: {\n    color: theme.palette.primary.main,\n    fontSize: 40\n  }\n});\n\nfunction FieldList(props) {\n  // console.log(\"FieldList Component\");\n  const [isDialog, setIsDialog] = useState(false);\n  const [fieldId, setFieldId] = useState(null);\n\n  const {\n    screenIdx,\n    setScreenIdx,\n    setSwipeble,\n    fields,\n    today,\n    deleteField,\n    selectField\n  } = useContext(AppContext);\n  const { classes, theme } = props;\n\n  return (\n    <div className={classes.root}>\n      <Navigation\n        leftIcon={\n          <HomeIcon\n            className={classes.icon}\n            onClick={() => setScreenIdx(screenIdx - 1)}\n          />\n        }\n        centerIcon={\n          <ListIcon\n            className={screenIdx === 2 ? classes.iconOnFocus : classes.icon}\n          />\n        }\n        rightIcon={\n          <AddIcon\n            className={classes.icon}\n            onClick={() => setSwipeble(\"setupField\")}\n          />\n        }\n      />\n\n      <div\n        style={{\n          padding: theme.spacing.unit,\n          overflowY: \"scroll\"\n        }}\n      >\n        <Grid container spacing={theme.spacing.unit * 2}>\n          {fields.map(field => {\n            const todayObj = field.data.find(\n              obj => obj.date === format(today, \"MM/dd/yyyy\")\n            );\n            const color = determineColor(todayObj.deficit);\n\n            return (\n              <Grid item xs={12} key={field.id}>\n                <Paper\n                  style={{\n                    borderLeft: `16px solid ${color}`\n                  }}\n                >\n                  <List component=\"nav\">\n                    <ListItem\n                      button\n                      onClick={() => {\n                        setFieldId(field.id);\n                        selectField(field.id);\n                        setScreenIdx(screenIdx - 1);\n                      }}\n                    >\n                      <div\n                        style={{\n                          marginLeft: -40\n                        }}\n                      >\n                        <Button\n                          variant=\"fab\"\n                          style={{\n                            background: color,\n                            boxShadow: \"none\"\n                          }}\n                          mini\n                        >\n                          <span style={{ fontSize: 13 }}>\n                            {todayObj.deficit}\n                          </span>\n                        </Button>\n                      </div>\n\n                      <ListItemText\n                        primary={field.address.split(\",\")[0]}\n                        secondary={format(\n                          field.irrigationDate,\n                          \"MMMM do, YYYY\"\n                        )}\n                      />\n\n                      <ListItemSecondaryAction>\n                        <IconButton\n                          aria-label=\"Delete\"\n                          onClick={() => {\n                            setFieldId(field.id);\n                            setIsDialog(true);\n                          }}\n                        >\n                          <DeleteIcon />\n                        </IconButton>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  </List>\n                </Paper>\n              </Grid>\n            );\n          })}\n        </Grid>\n\n        {/* DIALOG -----------------------------*/}\n        <Dialog\n          open={isDialog}\n          onClose={() => setIsDialog(false)}\n          aria-labelledby=\"alert-dialog-delete-field\"\n          aria-describedby=\"alert-dialog-delete-selected-field\"\n          hideBackdrop={true}\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            Are you sure you want to delete this field?\n          </DialogTitle>\n          <DialogContent />\n          <DialogActions>\n            <Button onClick={() => setIsDialog(false)} color=\"primary\">\n              Undo\n            </Button>\n            <Button\n              onClick={() => {\n                deleteField(fieldId);\n                setIsDialog(false);\n              }}\n              color=\"primary\"\n              autoFocus\n            >\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(withRoot(withStyles(styles)(withTheme()(FieldList))));\n","import React, { useContext } from \"react\";\n\nimport SwipeableViews from \"react-swipeable-views\";\n\nimport Forecast from \"./components/Forecast\";\nimport Field from \"./components/Field\";\nimport FieldList from \"./components/FieldList\";\nimport { AppContext } from \"./AppContext\";\n\nexport default () => {\n  const { screenIdx, setScreenIdx } = useContext(AppContext);\n  return (\n    <SwipeableViews\n      containerStyle={{\n        height: window.innerHeight,\n        WebkitOverflowScrolling: \"touch\"\n      }}\n      enableMouseEvents\n      index={screenIdx}\n      onChangeIndex={idx => setScreenIdx(idx)}\n    >\n      <Forecast />\n      <Field />\n      <FieldList />\n    </SwipeableViews>\n  );\n};\n","import React, { useState, useContext } from \"react\";\n\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\nimport withRoot from \"../withRoot\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport hideVirtualKeyboard from \"hide-virtual-keyboard\";\nimport Geocode from \"react-geocode\";\nimport { GOOGLEPLACES_API_KEY } from \"../utils/api\";\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng\n} from \"react-places-autocomplete\";\n\nimport Navigation from \"../components/Navigation\";\nimport { AppContext } from \"../AppContext\";\n\nGeocode.setApiKey(GOOGLEPLACES_API_KEY);\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: \"#fff\",\n    height: window.innerHeight\n  }\n});\n\nfunction FieldLocation(props) {\n  // console.log(\"FieldLocation Component\");\n  const [address, setAddress] = useState(\"\");\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const { setSwipeble, location, field, setField, clearField } = useContext(\n    AppContext\n  );\n  const { classes, theme, slideIdx, setSlideIdx } = props;\n\n  // select address from the list of suggestions\n  const handleSelectAddress = address => {\n    setAddress(address);\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(({ lat, lng }) => {\n        if (!(lat >= 37.2 && lat <= 47.6) || !(lng >= -82.7 && lng <= -66.1)) {\n          setErrorMessage(\"The current location is not valid\");\n        } else {\n          setLatitude(lat);\n          setLongitude(lng);\n        }\n      })\n      .catch(error => {\n        console.error(\"Error\", error);\n      });\n    hideVirtualKeyboard();\n  };\n\n  // Get address from latidude & longitude\n  const latLngToAddress = () => {\n    Geocode.fromLatLng(`${location.latitude}`, `${location.longitude}`).then(\n      response => {\n        setAddress(response.results[0].formatted_address);\n        setLatitude(location.latitude);\n        setLongitude(location.longitude);\n      },\n      error => {\n        console.error(\"Error\", error);\n      }\n    );\n  };\n\n  // Returns error if address is not valid\n  const handleError = async (status, clearSuggestions) => {\n    // console.log(\"Error from Google Maps API\", status);\n    setErrorMessage(status);\n    clearSuggestions();\n  };\n\n  // reset parameters\n  const handleCloseClick = () => {\n    setAddress(\"\");\n    setLatitude(null);\n    setLongitude(null);\n    setErrorMessage(\"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Navigation\n        leftIcon={\n          <ArrowBackIcon\n            onClick={() => {\n              handleCloseClick();\n              clearField();\n              setSwipeble(\"main\");\n            }}\n          />\n        }\n        centerIcon={\"Create Field - step 1/2\"}\n        rightIcon={null}\n      />\n\n      <div\n        style={{\n          padding: theme.spacing.unit,\n          overflowY: \"scroll\"\n        }}\n      >\n        <Grid container spacing={theme.spacing.unit * 2}>\n          <Grid\n            item\n            xs={12}\n            align=\"center\"\n            style={{ marginTop: theme.spacing.unit * 4 }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              Where is your field?\n            </Typography>\n          </Grid>\n\n          <Grid item xs={10} style={{ margin: \"0 auto\" }}>\n            <PlacesAutocomplete\n              onChange={setAddress}\n              value={address}\n              onSelect={handleSelectAddress}\n              onError={handleError}\n              shouldFetchSuggestions={address.length > 2}\n            >\n              {({ getInputProps, suggestions, getSuggestionItemProps }) => {\n                return (\n                  <div style={{ width: \"100%\" }}>\n                    <TextField\n                      {...getInputProps({\n                        id: \"outlined-select-address-native\",\n                        label: \"Search\",\n                        fullWidth: true,\n                        SelectProps: {\n                          native: true\n                        },\n                        InputProps: {\n                          endAdornment: (\n                            <InputAdornment variant=\"outlined\" position=\"end\">\n                              <IconButton\n                                aria-label=\"Clear address field\"\n                                onClick={handleCloseClick}\n                              >\n                                <ClearIcon />\n                              </IconButton>\n                            </InputAdornment>\n                          )\n                        },\n                        disabled: false,\n                        error: errorMessage === \"\" ? false : true,\n                        helperText: errorMessage\n                          ? \"Invalid address or address not in Northeast\"\n                          : \"\",\n                        margin: \"normal\"\n                      })}\n                    />\n\n                    <div className={classes.list}>\n                      {suggestions.length > 0 && (\n                        <List component=\"nav\">\n                          {suggestions.map((suggestion, i) => {\n                            return (\n                              <div key={i}>\n                                <ListItem\n                                  style={{ paddingLeft: 0 }}\n                                  button\n                                  {...getSuggestionItemProps(suggestion)}\n                                >\n                                  <ListItemText\n                                    primary={\n                                      suggestion.formattedSuggestion.mainText\n                                    }\n                                    secondary={\n                                      suggestion.formattedSuggestion\n                                        .secondaryText\n                                    }\n                                  />\n                                </ListItem>\n                                <Divider />\n                              </div>\n                            );\n                          })}\n                        </List>\n                      )}\n                    </div>\n                  </div>\n                );\n              }}\n            </PlacesAutocomplete>\n          </Grid>\n\n          {!errorMessage && !address && (\n            <Grid\n              item\n              xs={12}\n              align=\"center\"\n              style={{ marginTop: theme.spacing.unit * 8 }}\n            >\n              <Button\n                style={{ height: 60, width: 220 }}\n                size=\"large\"\n                variant=\"outlined\"\n                color=\"primary\"\n                disabled={!location}\n                onClick={latLngToAddress}\n              >\n                current location\n              </Button>\n            </Grid>\n          )}\n\n          {!errorMessage && latitude && (\n            <Grid\n              item\n              xs={12}\n              align=\"center\"\n              style={{ marginTop: theme.spacing.unit * 8 }}\n            >\n              <Button\n                style={{ height: 60, width: 220 }}\n                size=\"large\"\n                variant=\"outlined\"\n                color=\"secondary\"\n                onClick={() => {\n                  setField({\n                    ...field,\n                    address,\n                    latitude,\n                    longitude\n                  });\n\n                  setSlideIdx(slideIdx + 1);\n                }}\n              >\n                continue\n              </Button>\n            </Grid>\n          )}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(\n  withRoot(withStyles(styles)(withTheme()(FieldLocation)))\n);\n","import React, { useState, useContext } from \"react\";\n\nimport { withStyles, withTheme } from \"@material-ui/core/styles\";\nimport withRoot from \"../withRoot\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Navigation from \"../components/Navigation\";\nimport { AppContext } from \"../AppContext\";\n\nimport { InlineDatePicker } from \"material-ui-pickers\";\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    background: \"#fff\",\n    height: window.innerHeight\n  }\n});\n\nfunction FieldIrrigation(props) {\n  // console.log(\"FieldIrrigation Component\");\n  const [irrigationDate, setIrrigationDate] = useState(new Date());\n  const { setSwipeble, field, setField, addField } = useContext(AppContext);\n  const { classes, theme, slideIdx, setSlideIdx } = props;\n  return (\n    <div className={classes.root}>\n      <Navigation\n        leftIcon={<ArrowBackIcon onClick={() => setSlideIdx(slideIdx - 1)} />}\n        centerIcon={\"Create Field - step 2/2\"}\n        rightIcon={null}\n      />\n\n      <div\n        style={{\n          padding: theme.spacing.unit,\n          overflowY: \"scroll\"\n        }}\n      >\n        <Grid container spacing={theme.spacing.unit * 2}>\n          <Grid\n            item\n            xs={12}\n            align=\"center\"\n            style={{ marginTop: theme.spacing.unit * 4 }}\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              When is your last irrigation?\n            </Typography>\n          </Grid>\n\n          <Grid\n            item\n            xs={10}\n            style={{ margin: \"0 auto\", marginTop: theme.spacing.unit * 4 }}\n          >\n            <InlineDatePicker\n              onlyCalendar\n              keyboard\n              style={{ width: \"100%\" }}\n              value={irrigationDate}\n              onChange={date => setIrrigationDate(date)}\n              disableFuture\n              format=\"MM/dd/yyyy\"\n              mask={[/\\d/, /\\d/, \"/\", /\\d/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/]}\n            />\n          </Grid>\n\n          <Grid\n            item\n            xs={12}\n            align=\"center\"\n            style={{ marginTop: theme.spacing.unit * 9 }}\n          >\n            <Button\n              style={{ height: 60, width: 220 }}\n              size=\"large\"\n              variant=\"outlined\"\n              color=\"secondary\"\n              disabled={!irrigationDate}\n              onClick={() => {\n                setField({ ...field, irrigationDate });\n                addField();\n                setSwipeble(\"main\");\n              }}\n            >\n              start\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(\n  withRoot(withStyles(styles)(withTheme()(FieldIrrigation)))\n);\n","import React, { useState } from \"react\";\n\nimport SwipeableViews from \"react-swipeable-views\";\nimport Slide from \"@material-ui/core/Slide\";\n\nimport FieldLocation from \"./components/FieldLocation\";\nimport FieldIrrigation from \"./components/FieldIrrigation\";\n// import { AppContext } from \"./AppContext\";\n\nexport default () => {\n  const [slideIdx, setSlideIdx] = useState(0);\n  return (\n    <Slide direction=\"up\" in={true} mountOnEnter unmountOnExit>\n      <SwipeableViews\n        disabled\n        containerStyle={{\n          height: window.innerHeight,\n          WebkitOverflowScrolling: \"touch\"\n        }}\n        enableMouseEvents\n        index={slideIdx}\n        onChangeIndex={setSlideIdx}\n      >\n        <FieldLocation slideIdx={slideIdx} setSlideIdx={setSlideIdx} />\n        <FieldIrrigation slideIdx={slideIdx} setSlideIdx={setSlideIdx} />\n      </SwipeableViews>\n    </Slide>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { AppContext } from \"./AppContext\";\n\nimport axios from \"axios\";\nimport { PROXYDARKSKY } from \"./utils/api\";\n\nimport Main from \"./Main\";\nimport SetupField from \"./SetupField\";\n\nimport { getPET } from \"./utils/utils\";\n\nconst getLocation = () => {\n  const geolocation = navigator.geolocation;\n\n  const location = new Promise((resolve, reject) => {\n    if (!geolocation) {\n      reject(new Error(\"Not Supported\"));\n    }\n\n    geolocation.getCurrentPosition(\n      position => {\n        resolve(position);\n      }\n      // () => {\n      //   reject(new Error(\"Permission denied\"));\n      // } CHECK THIS!!!!\n    );\n  });\n\n  return {\n    type: \"GET_LOCATION\",\n    payload: location\n  };\n};\n\nconst fieldInitialState = {\n  address: \"\",\n  cropType: \"grass\",\n  data: null,\n  deficitAdjustments: [],\n  forecast: null,\n  id: null,\n  irrigationDate: new Date(),\n  latitude: null,\n  longitude: null,\n  soilCapacity: \"medium\"\n};\n\nexport default () => {\n  const [today, setToday] = useState(new Date(\"07/07/2018\")); //TESTING!!\n  const [todayIdx, setTodayIdx] = useState(0); //TESTING!!\n  const [screenIdx, setScreenIdx] = useState(1);\n  const [swipeble, setSwipeble] = useState(\"main\");\n  const [location, setLocation] = useState(null);\n  const [fields, setFields] = useState([]);\n  const [field, setField] = useState(fieldInitialState);\n\n  // CRUD operations ----------------------------------------------------\n  const addField = async () => {\n    const data = await getPET(\n      field.irrigationDate,\n      field.latitude,\n      field.longitude,\n      field.soilCapacity,\n      0\n    );\n    setTodayIdx(data.findIndex(obj => obj.date === today));\n\n    const forecast = await fetchForecastData(field.latitude, field.longitude);\n\n    field.id = Date.now();\n    field.data = data;\n    field.forecast = forecast;\n    setField(field);\n    setFields([field, ...fields]);\n  };\n\n  const clearField = () => {\n    setField(fieldInitialState);\n    // fields.length === 0\n    // ? deleteFromLocalstorage()\n    // : writeToLocalstorage(fields);\n  };\n\n  const selectField = id => {\n    const field = fields.find(field => field.id === id);\n    setField(field);\n    // const countHrs = differenceInHours(new Date(), new Date(field.id));\n\n    // if (countHrs > 3) {\n    //   console.log(\"more than 3 hours...\");\n    //   this.reloadPETAndForecastData();\n    // }\n  };\n\n  const deleteField = id => {\n    const fieldsUpdated = fields.filter(field => field.id !== id);\n    setFields(fieldsUpdated);\n    fieldsUpdated.length === 0\n      ? deleteFromLocalstorage()\n      : writeToLocalstorage(fields);\n  };\n\n  // Get user current latitude and longitude -------------------------------\n  useEffect(async () => {\n    const res = await getLocation();\n    res.payload.then(res => {\n      const latitude = res.coords.latitude;\n      const longitude = res.coords.longitude;\n      setLocation({ latitude, longitude });\n    });\n    readFromLocalstorage();\n  }, []);\n\n  // write to localStorage when fields.length changes\n  useEffect(\n    () => {\n      fields.length > 0 && writeToLocalstorage(fields);\n    },\n    [fields.length]\n  );\n\n  // Fetch forecast data ----------------------------------------------------\n  const fetchForecastData = (latitude, longitude) => {\n    const url = `${PROXYDARKSKY}/${latitude},${longitude}?exclude=flags,minutely,alerts,hourly`;\n    return axios\n      .get(url)\n      .then(res => {\n        // console.log(res.data);\n        const { currently, daily } = res.data;\n        return { currently, daily };\n      })\n      .catch(err => {\n        console.log(\"Failed to load forecast weather data\", err);\n      });\n  };\n\n  // LOCALSTORAGE------------------------------------------------------------\n  const writeToLocalstorage = fields => {\n    console.log(fields);\n    console.log(\"writeToLocalstorage\");\n    localStorage.setItem(\"nrcc-irrigation-tool\", JSON.stringify(fields));\n  };\n\n  const readFromLocalstorage = () => {\n    console.log(\"readFromLocalStorage\");\n    const localStorageRef = localStorage.getItem(\"nrcc-irrigation-tool\");\n    // console.log(localStorageRef);\n    if (localStorageRef) {\n      const params = JSON.parse(localStorageRef);\n      if (params.length > 0) {\n        const fieldCopy = { ...field };\n        fieldCopy.address = params[0].address;\n        fieldCopy.cropType = params[0].cropType;\n        fieldCopy.data = params[0].data;\n        fieldCopy.deficitAdjustments = params[0].deficitAdjustments;\n        fieldCopy.forecast = params[0].forecast;\n        fieldCopy.id = params[0].id;\n        fieldCopy.irrigationDate = new Date(params[0].irrigationDate);\n        fieldCopy.latitude = params[0].latitude;\n        fieldCopy.longitude = params[0].longitude;\n        fieldCopy.soilCapacity = params[0].soilCapacity;\n        setField(fieldCopy);\n        setFields(params);\n      }\n    }\n  };\n\n  const deleteFromLocalstorage = () => {\n    localStorage.removeItem(\"nrcc-irrigation-tool\");\n  };\n\n  console.log(field);\n  console.log(fields);\n\n  return (\n    <AppContext.Provider\n      value={{\n        screenIdx,\n        setScreenIdx,\n        swipeble,\n        setSwipeble,\n        location,\n        field,\n        fields,\n        setField,\n        addField,\n        clearField,\n        today,\n        deleteField,\n        selectField\n      }}\n    >\n      {swipeble === \"main\" ? <Main /> : <SetupField />}\n    </AppContext.Provider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nReactDOM.render(\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <App />\n  </MuiPickersUtilsProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}